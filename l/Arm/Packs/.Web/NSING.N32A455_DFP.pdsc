<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.2" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
    <vendor>NSING</vendor>
    <url>https://www.nsing.com.sg/uploadfile/file/pack/</url>
    <name>N32A455_DFP</name>
    <description>Nsing N32A455 Series Device Support, Drivers and Examples</description>

    <releases>
		<release date="2024-06-04" version="1.0.0">		    
            First release of N32A455_DFP
        </release>
    </releases>

    <keywords>
        <keyword>NSING</keyword>
        <keyword>Device Support</keyword>
        <keyword>N32A455</keyword>
		<keyword>N32</keyword>
    </keywords>

    <devices>
        <family Dfamily="N32A455 Series" Dvendor="NSING:185">
          <processor Dcore="Cortex-M4" DcoreVersion="r0p1" Dfpu="1" Dmpu="0" Dendian="Little-endian"/>
          <description>
The N32A455 series utilizes a 32-bit ARM Cortex-M4F core with operating frequency up to 144MHz, supporting floating-point unit and DSP instructions. 
- Up to 512KB embedded encrypted Flash memory.
- 144KB SRAM.
- 4x 12bit 4.7Msps ADC and 7x high-speed comparators
- 7x U(S)ART, 4x I2C, 3x SPI, 1x QSPI, 2x 12bit DAC, 4x OPAMP and RTC	
- Hardware Cryptographics Engine.
          </description>
  
        <subFamily DsubFamily="N32A455">
		   <processor Dclock="128000000"/>		   
           <compile header="firmware/CMSIS/device/n32a455.h" define="N32A455 USE_STDPERIPH_DRIVER"/>
	  	   <feature type="XTAL"     n="4000000"     m="32000000" name="External Crystal Oscillator"/>		   
	  	   <feature type="VCC"      n="1.80"        m="3.60"/>		
		   <feature type="RTC"      n="32768"/>		
           <feature type="USART"    n="3"/>
	       <feature type="CAN"      n="2"/>
		   <feature type="Temp"      n="-40"        m="105"/>		
		  <!-- *************************  Device 'N32A455CEL7'  ***************************** -->
		  <device Dname="N32A455CEL7"> 
			<description>
- Package:  LQFP48 
- QSPI:  1 
			</description>
			<feature type="QFP"      count="48" name="LQFP48"/>
		    <feature type="Memory"   n="512" name="512KB Flash"/>	
		    <feature type="Memory"   n="144" name="144KB SRAM"/>	
			<feature type="IOs"      n="37"     name="Input and Output Ports"/>
			<feature type="Timer"    n="8"/>
			<feature type="PWM"      n="23"/>	
			<feature type="ADC"      n="33"     m="12"  name="16-ch 12bit ADC"/>	
			<feature type="DAC"      n="2"      m="12"  name="2x 12bit ADC"/>
			<feature type="UART"     n="4"/>	
		    <feature type="SPI"      n="3"/>	
			<feature type="I2C"      n="3"/>	
		    <feature type="AnalogOther"    n="4"  name="OPAMP"/>
		    <feature type="AnalogOther"    n="5"  name="COMP"/>			
			
			<memory id="IRAM1"   start="0x20000000" size="0x24000" default="1" init="0"/>
			<memory id="IROM1"   start="0x08000000" size="0x80000" default="1" startup="1"/>
			<algorithm name="Flash/N32A455_512K.FLM" start="0x08000000" size="0x80000" default="1"/>
			<debug svd="svd/N32A455.svd"/>
          </device>	

		 <!-- *************************  Device 'N32A455REL7'  ***************************** -->
	     <device Dname="N32A455REL7">
			<description>
- Package:  LQFP64 
- QSPI:  1 
			</description>
			<feature type="QFP"      count="64" name="LQFP64"/>
		    <feature type="Memory"   n="512" name="512KB Flash"/>	
		    <feature type="Memory"   n="144" name="144KB SRAM"/>				
			<feature type="IOs"      n="51"     name="Input and Output Ports"/>
			<feature type="Timer"    n="8"/>
			<feature type="PWM"      n="24"/>	
			<feature type="ADC"      n="22"     m="12"  name="16-ch 12bit ADC"/>	
			<feature type="DAC"      n="2"      m="12"  name="2x 12bit ADC"/>
			<feature type="UART"     n="4"/>	
		    <feature type="SPI"      n="3"/>	
			<feature type="I2C"      n="4"/>	
		    <feature type="AnalogOther"    n="4"  name="OPAMP"/>
		    <feature type="AnalogOther"    n="5"  name="COMP"/>		
		    <feature type="SDIO"     n="1"/>				
			
			<memory id="IRAM1"   start="0x20000000" size="0x24000" default="1" init="0"/>
			<memory id="IROM1"   start="0x08000000" size="0x80000" default="1" startup="1"/>
			<algorithm name="Flash/N32A455_512K.FLM" start="0x08000000" size="0x80000" default="1"/>
			<debug svd="svd/N32A455.svd"/>
		  </device>

		  <!-- *************************  Device 'N32A455MEL7'  ***************************** -->
		  <device Dname="N32A455MEL7">
			<description>
- Package:  LQFP80 
- QSPI:  1 
			</description>
			<feature type="QFP"      count="80" name="LQFP80"/>
		    <feature type="Memory"   n="512" name="512KB Flash"/>	
		    <feature type="Memory"   n="144" name="144KB SRAM"/>				
			<feature type="IOs"      n="67"     name="Input and Output Ports"/>
			<feature type="Timer"    n="8"/>
			<feature type="PWM"      n="24"/>	
			<feature type="ADC"      n="22"     m="12"  name="16-ch 12bit ADC"/>	
			<feature type="DAC"      n="2"      m="12"  name="2x 12bit ADC"/>
			<feature type="UART"     n="4"/>	
		    <feature type="SPI"      n="3"/>	
			<feature type="I2C"      n="4"/>	
		    <feature type="AnalogOther"    n="4"  name="OPAMP"/>
		    <feature type="AnalogOther"    n="5"  name="COMP"/>	
		    <feature type="SDIO"     n="1"/>				
			
			<memory id="IRAM1"   start="0x20000000" size="0x24000" default="1" init="0"/>
			<memory id="IROM1"   start="0x08000000" size="0x80000" default="1" startup="1"/>
			<algorithm name="Flash/N32A455_512K.FLM" start="0x08000000" size="0x80000" default="1"/>
			<debug svd="svd/N32A455.svd"/>
          </device>	
		  <!-- *************************  Device 'N32A455VEL7'  ***************************** -->
		  <device Dname="N32A455VEL7">
			<description>
- Package:  LQFP100 
- QSPI:  1 
			</description>
			<feature type="QFP"      count="100" name="LQFP100"/>
		    <feature type="Memory"   n="512" name="512KB Flash"/>	
		    <feature type="Memory"   n="144" name="144KB SRAM"/>				
			<feature type="IOs"      n="80"     name="Input and Output Ports"/>
			<feature type="Timer"    n="8"/>
			<feature type="PWM"      n="24"/>	
			<feature type="ADC"      n="22"     m="12"  name="16-ch 12bit ADC"/>	
			<feature type="DAC"      n="2"      m="12"  name="2x 12bit ADC"/>
			<feature type="UART"     n="4"/>	
		    <feature type="SPI"      n="3"/>	
			<feature type="I2C"      n="4"/>	
		    <feature type="AnalogOther"    n="4"  name="OPAMP"/>
		    <feature type="AnalogOther"    n="5"  name="COMP"/>	
		    <feature type="SDIO"     n="1"/>				
			
			<memory id="IRAM1"   start="0x20000000" size="0x24000" default="1" init="0"/>
			<memory id="IROM1"   start="0x08000000" size="0x80000" default="1" startup="1"/>
			<algorithm name="Flash/N32A455_512K.FLM" start="0x08000000" size="0x80000" default="1"/>
			<debug svd="svd/N32A455.svd"/>
          </device>	
        </subFamily>
        </family>
    </devices>        

    <conditions>     
		<!-- Device Conditions -->
		<condition id="N32A455">
		  <description>NSING N32A455 Devices</description> 
		  <require Dvendor="NSING:185" Dname="N32*"/>
		</condition>
		
		<!-- Device + CMSIS Conditions -->
        <condition id="N32A455 CMSIS">            
		    <description>NSING N32A455 Device and the ARM compiler</description>
		    <require condition="N32A455"/>
		    <require Tcompiler="ARMCC"/>
        </condition>
		
		<!-- N32A455 STDPERIPHERALS MISC Conditions -->
        <condition id="N32A455 STDPERIPHERALS">
            <description>NSING N32A455 Standard Peripherals drivers</description>
            <require condition="N32A455 CMSIS"/>
            <require Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="Framework"/>
        </condition>
		
		<!-- N32A455 STDPERIPHERALS RCC Conditions -->
        <condition id="N32A455 STDPERIPHERALS RCC">
            <description>NSING N32A455 Standard Peripherals driver with RCC</description>
            <require condition="N32A455 STDPERIPHERALS"/>
            <require Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="RCC"/>
        </condition>
		
		<condition id="N32A455 Algorithm Common" >
            <description>NSING N32A455 Series Algorithm Libraries Common Functions.</description>
            <require condition="N32A455 CMSIS"/>
            <require Cclass ="Device" Cgroup="Algorithm_Libs" Csub="Common"/>
        </condition>
		
    </conditions>

    <components>
		<component Cclass="Device" Cgroup="Startup" Cversion="1.0.0" condition="N32A455 CMSIS">
            <description>Startup File for Nsing N32A455 Series</description>
            <files>
                <file category="include" name="firmware/CMSIS/device/"/>
				<file category="header" name="firmware/CMSIS/device/n32a455.h"/>
				<!-- startup file -->				
                <file category="source" name="firmware/CMSIS/device/startup/startup_n32a455.s" attr="config"  version="1.0.0" condition="N32A455 CMSIS"/>
				<!-- system file -->
                <file category="source" name="firmware/CMSIS/device/system_n32a455.c" attr="config" version="1.0.0"/>
				
            </files>
        </component>
		
	    <!-- N32A455_StdPeripherals -->		
        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="Framework" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Standard Peripherals Drivers Framework</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_FRAMEWORK
            </RTE_Components_h>
            <files>
                <file category="include" name="firmware/n32a455_std_periph_driver/inc/"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/misc.c"/>
            </files>
        </component>
		
        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="WWDG" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Window watchdog (WWDG) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_WWDG
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_wwdg.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_wwdg.c"/>
            </files>
        </component>		   
		 
        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="USART" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Universal synchronous asynchronous receiver transmitter (USART) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_USART
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_usart.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_usart.c"/>
            </files>
        </component>
        
        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="TIMER" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Timers (TIMER) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_TIM
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_tim.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_tim.c"/>
            </files>
        </component>
	    
        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="SPI" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Serial peripheral interface (SPI) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_SPI
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_spi.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_spi.c"/>
            </files>
        </component> 	     
	      
        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="SDIO" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Secure digital (SDIO) interface driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_SDIO
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_sdio.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_sdio.c"/>
            </files>
        </component>
		
        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="ADC" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Analog-to-digital converter (ADC) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_ADC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_adc.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_adc.c"/>
            </files>
        </component>		
		
        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="BKP" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Backup registers (BKPR) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_BKP
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_bkp.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_bkp.c"/>
            </files>
        </component>
		
        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="CAN" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Controller area network (CAN) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_CAN
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_can.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_can.c"/>
            </files>
        </component>		
		
        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="CRC" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>CRC calculation unit (CRC) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_CRC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_crc.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_crc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="DAC" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Digital-to-analog converter (DAC) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_DAC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_dac.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_dac.c"/>
            </files>
        </component>
		
        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="MCUDBG" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS">
            <description>MCU debug component (MCUDBG) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_DBG
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_dbg.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_dbg.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="DMA" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>DMA controller (DMA) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_DMA
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_dma.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_dma.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="EXTI" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>External interrupt/event controller (EXTI) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_EXTI
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_exti.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_exti.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="FLASH" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Embedded Flash memory driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_FLASH
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_flash.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_flash.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="GPIO" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>General-purpose I/O (GPIO) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_GPIO
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_gpio.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_gpio.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="I2C" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Inter-integrated circuit (I2C) interface driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_I2C
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_i2c.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_i2c.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="IWDG" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS">
            <description>Independent watchdog (IWDG) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_IWDG
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_iwdg.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_iwdg.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="PWR" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Power controller (PWR) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_PWR
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_pwr.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_pwr.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="RCC" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS">
            <description>Reset and clock control (RCC) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_RCC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_rcc.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_rcc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="RTC" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS">
            <description>Real-time clock (RTC) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_RTC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_rtc.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_rtc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="COMP" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Comparator (COMP) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_COMP
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_comp.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_comp.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="OPAMP" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Operational amplifier (OPAMP) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_OPAMP
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_opamp.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_opamp.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="N32A455_StdPeripherals" Csub="QSPI" Cversion="1.0.0" condition="N32A455 STDPERIPHERALS RCC">
            <description>Queued SPI (QSPI) driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_QSPI
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_std_periph_driver/inc/n32a455_qspi.h"/>
                <file category="source" name="firmware/n32a455_std_periph_driver/src/n32a455_qspi.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="Algorithm_Libs" Csub="Common" Cversion="1.0.0" condition="N32A455 CMSIS">
		    <description>Algo driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_COMMON
            </RTE_Components_h>
            <files>
                <!--file category="include" name="firmware/n32a455_algo_lib/inc"/ -->
                <file category="header" name="firmware/n32a455_algo_lib/inc/n32a455_algo_common.h"/>
                <file category="source" name="firmware/n32a455_algo_lib/lib/n32a455_algo_common.lib"/>
            </files>
        </component>
		
        <component Cclass="Device" Cgroup="Algorithm_Libs" Csub="AES" Cversion="1.0.0" condition="N32A455 Algorithm Common">
		    <description>AES driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_AES
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_algo_lib/inc/n32a455_aes.h"/>
                <file category="source" name="firmware/n32a455_algo_lib/lib/n32a455_aes.lib"/>
            </files>
        </component>
        <component Cclass="Device" Cgroup="Algorithm_Libs" Csub="DES" Cversion="1.0.0" condition="N32A455 Algorithm Common">
		    <description>DES driver for N32A455</description>		
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_DES
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_algo_lib/inc/n32a455_des.h"/>
                <file category="source" name="firmware/n32a455_algo_lib/lib/n32a455_des.lib"/>
            </files>
        </component>
        <component Cclass="Device" Cgroup="Algorithm_Libs" Csub="RNG" Cversion="1.0.0" condition="N32A455 Algorithm Common">
		    <description>RNG driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_RNG
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_algo_lib/inc/n32a455_rng.h"/>
                <file category="source" name="firmware/n32a455_algo_lib/lib/n32a455_rng.lib"/>
            </files>
        </component>
        <component Cclass="Device" Cgroup="Algorithm_Libs" Csub="HASH" Cversion="1.0.0" condition="N32A455 Algorithm Common">
		    <description>HASH driver for N32A455</description>
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_HASH
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32a455_algo_lib/inc/n32a455_hash.h"/>
                <file category="source" name="firmware/n32a455_algo_lib/lib/n32a455_hash.lib"/>
            </files>
        </component>	
		


    </components>
</package>
